name: Check for changes in paths

on:
  workflow_call:
    outputs:
      action:
        value: ${{ jobs.changes.outputs.action }}
      semantic_pr:
        value: ${{ jobs.pr_type.outputs.semantic_pr }}

permissions:
  contents: read
  pull-requests: read

jobs:
  pr_type:
    runs-on: ubuntu-24.04
    outputs:
      semantic_pr: ${{ steps.check.outputs.semantic_pr }}
    steps:
      - name: Check PR type
        id: check
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            const eventType = context.eventName;
            const prAction = context.payload.action;

            const targetTypes = ['opened', 'edited', 'synchronize', 'reopened'];
            const isPullRequest = eventType.startsWith('pull_request');
            const isTargetAction = targetTypes.includes(prAction);

            console.log('Event Type:', eventType);
            console.log('PR Action:', prAction);
            console.log('Is Pull Request:', isPullRequest);
            console.log('Is Target Action:', isTargetAction);

            core.setOutput('semantic_pr', isPullRequest && isTargetAction);

  changes:
    runs-on: ubuntu-24.04
    outputs:
      action: ${{ steps.filter.outputs.action }}
    steps:
      # https://github.com/marketplace/actions/checkout
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      # https://github.com/marketplace/actions/paths-changes-filter
      - name: Paths Changes Filter
        uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3.0.2
        id: filter
        with:
          filters: |
            action:
              - '.github/actions/*.yml'
              - '.github/workflows/*.yml'

  display_outputs:
    runs-on: ubuntu-24.04
    needs:
      - pr_type
      - changes
    steps:
      - name: Display outputs
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            const outputs = {
              'PR Type Check': {
                'semantic_pr': '${{ needs.pr_type.outputs.semantic_pr }}'
              },
              'Changes Check': {
                'action': '${{ needs.changes.outputs.action }}',
              }
            };

            console.log('=== Workflow Outputs ===');
            for (const [category, values] of Object.entries(outputs)) {
              console.log(`\n${category}:`);
              for (const [key, value] of Object.entries(values)) {
                console.log(`  ${key}: ${value}`);
              }
            }
